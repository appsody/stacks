<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>{{.stack.parentpomgroup}}</groupId>
  <artifactId>{{.stack.parentpomid}}</artifactId>
  <version>{{.stack.semver.major}}.{{.stack.semver.minor}}.{{.stack.semver.patch}}</version>
  <packaging>pom</packaging>

  <name>Appsody Spring Boot2 stack</name>
  <description>Parent POM file for an AppsodyApplication project to facilitate usage of Spring Boot with Snowdrop.</description>
  <url>https://appsody.dev</url>

  <licenses>
    <license>
      <name>Apache License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <repositories>
    <repository>
      <id>redhat-early-access</id>
      <name>Red Hat Early Access Repository</name>
      <url>https://maven.repository.redhat.com/earlyaccess/all/</url>
    </repository>
    <repository>
      <id>redhat-ga</id>
      <name>Red Hat GA Repository</name>
      <url>https://maven.repository.redhat.com/ga/</url>
    </repository>
  </repositories>

  <pluginRepositories>
    <pluginRepository>
      <id>redhat-early-access</id>
      <name>Red Hat Early Access Repository</name>
      <url>https://maven.repository.redhat.com/earlyaccess/all/</url>
    </pluginRepository>
    <pluginRepository>
      <id>redhat-ga</id>
      <name>Red Hat GA Repository</name>
      <url>https://maven.repository.redhat.com/ga/</url>
    </pluginRepository>
  </pluginRepositories>

  <!-- order of precedence of the artifact’s version is:
    * The version of the artifact’s direct declaration in project pom
    * The version of the artifact in the parent project
    * The version in the imported pom, taking into consideration the order of importing files
    * dependency mediation

    * If the same artifact is defined with different versions in 2 imported BOMs,
      then the version in the BOM file that was declared first will win
  -->

  <properties>
    <!-- Required library versions -->
    
    <spring-boot-bom.version>2.1.12.Final-redhat-00001</spring-boot-bom.version>
    <spring-boot.version>2.1.12.RELEASE</spring-boot.version>
    
    <java.version>1.8</java.version>
    <maven.compiler.source>${java.version}</maven.compiler.source>
    <maven.compiler.target>${java.version}</maven.compiler.target>

    <kotlin.version>1.2.71</kotlin.version>
    <kotlin.compiler.jvmTarget>${java.version}</kotlin.compiler.jvmTarget>

    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

    <!-- properties imported from spring-boot-dependencies for ${spring-boot.version} 
         stack build process will test and ensure these remain in sync. -->
		<maven-antrun-plugin.version>1.8</maven-antrun-plugin.version>
		<maven-assembly-plugin.version>3.1.1</maven-assembly-plugin.version>
		<maven-clean-plugin.version>3.1.0</maven-clean-plugin.version>
		<maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
		<maven-dependency-plugin.version>3.1.1</maven-dependency-plugin.version>
		<maven-deploy-plugin.version>2.8.2</maven-deploy-plugin.version>
		<maven-enforcer-plugin.version>3.0.0-M3</maven-enforcer-plugin.version>
		<maven-failsafe-plugin.version>2.22.2</maven-failsafe-plugin.version>
		<maven-install-plugin.version>2.5.2</maven-install-plugin.version>
		<maven-invoker-plugin.version>3.1.0</maven-invoker-plugin.version>
		<maven-help-plugin.version>3.1.1</maven-help-plugin.version>
		<maven-jar-plugin.version>3.1.2</maven-jar-plugin.version>
		<maven-javadoc-plugin.version>3.0.1</maven-javadoc-plugin.version>
		<maven-resources-plugin.version>3.1.0</maven-resources-plugin.version>
		<maven-shade-plugin.version>3.2.1</maven-shade-plugin.version>
		<maven-site-plugin.version>3.7.1</maven-site-plugin.version>
		<maven-source-plugin.version>3.0.1</maven-source-plugin.version>
		<maven-surefire-plugin.version>2.22.2</maven-surefire-plugin.version>
    <maven-war-plugin.version>3.2.3</maven-war-plugin.version>    
     
  </properties>

  <dependencyManagement>
    <dependencies>
      <!-- required dependency versions -->
      <dependency>
        <groupId>me.snowdrop</groupId>
        <artifactId>spring-boot-bom</artifactId>
        <version>${spring-boot-bom.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>      
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <!-- Core -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>

    <!--Monitoring -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>
    <dependency>
      <groupId>io.micrometer</groupId>
      <artifactId>micrometer-registry-prometheus</artifactId>
    </dependency>

    <!-- Distributed tracing with OpenTracing. Define requried configuration for production use: 
      https://github.com/opentracing-contrib/java-spring-jaeger
     -->
    <dependency>
      <groupId>io.opentracing.contrib</groupId>
      <artifactId>opentracing-spring-jaeger-web-starter</artifactId>
    </dependency>
  </dependencies>

  <build>
    <!-- ensure fixed archive name so multistage build can find app archive -->
    <finalName>app</finalName>
    <pluginManagement>
      <plugins>
        <plugin>
          <artifactId>maven-dependency-plugin</artifactId>
        </plugin>
        <plugin>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>${maven-enforcer-plugin.version}</version>
          <executions>
            <execution>
              <id>enforce-banned-dependencies</id>
              <goals>
                <goal>enforce</goal>
              </goals>
              <configuration>
                <rules>
                  <bannedDependencies>
                    <excludes>
                      <exclude>org.springframework.boot:spring-boot-starter-web</exclude>
                    </excludes>
                    <includes>
                      <include>org.springframework.boot:spring-boot-starter-web:${spring-boot.version}</include>
                    </includes>
                  </bannedDependencies>
                </rules>
                <fail>true</fail>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>${maven-clean-plugin.version}</version>
          <configuration>
            <excludeDefaultDirectories>true</excludeDefaultDirectories>
            <filesets>
              <fileset>
                <directory>${project.build.outputDirectory}</directory>
                <includes>
                    <include>**/*</include>
                </includes>
              </fileset>
            </filesets>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <version>${spring-boot.version}</version>
        <configuration>
          <systemPropertyVariables>
            <spring.devtools.restart.additional-paths>./target</spring.devtools.restart.additional-paths>
            <spring.devtools.restart.trigger-file>.appsody-spring-trigger</spring.devtools.restart.trigger-file>
          </systemPropertyVariables>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>repackage</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <!-- Activate Spring developer tools when using appsody -->
    <profile>
        <id>dev</id>
        <activation>
          <property>
            <name>env.APPSODY_DEV_MODE</name>
          </property>
        </activation>
        <dependencies>
          <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <optional>true</optional>
          </dependency>
        </dependencies>
        <build>
          <plugins>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-antrun-plugin</artifactId>
              <version>1.1</version>
              <executions>
                <execution>
                  <id>trigger-spring-restart</id>
                  <phase>compile</phase>
                  <goals>
                    <goal>run</goal>
                  </goals>
                  <configuration>
                    <tasks>
                      <echo>Triggering Spring app restart.</echo>
                      <touch file="${basedir}/target/.appsody-spring-trigger" />
                    </tasks>
                  </configuration>
                </execution>
              </executions>
            </plugin>
          </plugins>
        </build>
    </profile>
  </profiles>

</project>
